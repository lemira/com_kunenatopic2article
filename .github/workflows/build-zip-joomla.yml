name: Build Joomla Package
on:
  workflow_dispatch:
    inputs:
      auto_download:
        description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏'
        required: false
        default: 'true'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set timestamp variable (–ë–µ—Ä–ª–∏–Ω—Å–∫–æ–µ –≤—Ä–µ–º—è)
        run: |
          TIMESTAMP=$(TZ="Europe/Berlin" date +"%y%m%d-%H%M")
          echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π TIMESTAMP: $TIMESTAMP"
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          
      - name: Prepare component files
        run: |
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
          mkdir -p build_temp
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
          echo "=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ==="
          find . -maxdepth 3 -type f -not -path './.git*' -not -path './.github*' | sort
          echo "=========================="
          
          # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∫—Ä–æ–º–µ —Å–ª—É–∂–µ–±–Ω—ã—Ö
          rsync -av --exclude='.git*' --exclude='.github*' --exclude='build_temp*' --exclude='*.zip' . build_temp/
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          echo "=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ –≤ build_temp ==="
          find build_temp -type f | sort
          echo "=== –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $(find build_temp -type f | wc -l) ==="
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
          echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ ==="
          if [ -f "build_temp/kunenatopic2article.php" ]; then
            echo "‚úÖ kunenatopic2article.php –Ω–∞–π–¥–µ–Ω"
            ls -la build_temp/kunenatopic2article.php
          else
            echo "‚ùå kunenatopic2article.php –ù–ï –Ω–∞–π–¥–µ–Ω"
          fi
          
          if [ -f "build_temp/kunenatopic2article.xml" ]; then
            echo "‚úÖ kunenatopic2article.xml –Ω–∞–π–¥–µ–Ω"
            ls -la build_temp/kunenatopic2article.xml
          else
            echo "‚ùå kunenatopic2article.xml –ù–ï –Ω–∞–π–¥–µ–Ω"
          fi
          
      - name: Create ZIP archive with timestamp
        run: |
          cd build_temp
          zip -r ../Joomla-Component-${{ env.TIMESTAMP }}.zip . -x ".*"
          cd ..
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ZIP
          echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º ZIP ==="
          ls -lh Joomla-Component-${{ env.TIMESTAMP }}.zip
          echo "=== –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ZIP (–ø–µ—Ä–≤—ã–µ 20 —Ñ–∞–π–ª–æ–≤) ==="
          unzip -l Joomla-Component-${{ env.TIMESTAMP }}.zip | head -25
          
      - name: Upload ZIP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Joomla-Component-${{ env.TIMESTAMP }}
          path: Joomla-Component-${{ env.TIMESTAMP }}.zip
          retention-days: 30
          
      # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–µ–ª–∏–∑–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      - name: Create temporary release for download
        if: inputs.auto_download == true || inputs.auto_download == ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: temp-build-${{ env.TIMESTAMP }}
          name: "üîß Temp Build ${{ env.TIMESTAMP }}"
          body: |
            **–í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è**
            
            –≠—Ç–æ—Ç —Ä–µ–ª–∏–∑ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.
            
            ‚è∞ –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏: ${{ env.TIMESTAMP }}
            üîó –ö–æ–º–º–∏—Ç: ${{ github.sha }}
            
            üì• **–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –º–æ–∂–Ω–æ –ø—Ä—è–º–æ –æ—Ç—Å—é–¥–∞ ‚Üì**
          files: Joomla-Component-${{ env.TIMESTAMP }}.zip
          prerelease: true
          draft: false
          fail_on_unmatched_files: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
          
      # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      - name: Generate download link
        if: success()
        run: |
          echo "## üì• –§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### –°–ø–æ—Å–æ–±—ã —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **[üì¶ –°–∫–∞—á–∞—Ç—å –∏–∑ Artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "2. **[üîó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Releases](${{ github.server_url }}/${{ github.repository }}/releases)** (–µ—Å–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìÑ **–ò–º—è —Ñ–∞–π–ª–∞:** \`Joomla-Component-${{ env.TIMESTAMP }}.zip\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üïê **–í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏:** ${{ env.TIMESTAMP }}" >> $GITHUB_STEP_SUMMARY
        
  # Job –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–µ–ª–∏–∑–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  cleanup:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Cleanup old temporary releases
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          retries: 3
          retry-exempt-status-codes: 400,401,403,404
          script: |
            try {
              const { data: releases } = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 50
              });
              
              const now = new Date();
              const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);
              
              let deletedCount = 0;
              
              for (const release of releases) {
                if (release.tag_name.startsWith('temp-build-') && 
                    new Date(release.created_at) < oneDayAgo) {
                  
                  try {
                    console.log(`–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–µ–ª–∏–∑: ${release.tag_name}`);
                    
                    // –£–¥–∞–ª—è–µ–º —Ä–µ–ª–∏–∑
                    await github.rest.repos.deleteRelease({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      release_id: release.id,
                    });
                    
                    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                    await new Promise(resolve => setTimeout(resolve, 1000));
                    
                    // –£–¥–∞–ª—è–µ–º —Ç–µ–≥
                    await github.rest.git.deleteRef({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      ref: `tags/${release.tag_name}`,
                    });
                    
                    deletedCount++;
                    
                    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Ä–∞–∑
                    if (deletedCount >= 5) break;
                    
                  } catch (error) {
                    console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${release.tag_name}: ${error.message}`);
                  }
                }
              }
              
              console.log(`–£–¥–∞–ª–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–µ–ª–∏–∑–æ–≤: ${deletedCount}`);
              
            } catch (error) {
              console.log(`–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: ${error.message}`);
            }
